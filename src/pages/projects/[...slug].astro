---
import type { GetStaticPaths, GetStaticPathsResult } from "astro";
import { getCollection, type CollectionEntry } from "astro:content";
import { parseFilepath, augmentEntry, getCollectionAug } from "@/utils/aug";

// SSG
// NB: refactor to utils if reused -- getStaticPathsForCollection(collectionName)
export async function getStaticPaths() {
  let paths: GetStaticPathsResult = [];

  for (const entry of await getCollectionAug("projects")) {
    // let entry = await augmentEntry(rawEntry);
    console.debug("[SSG] Processing entry:", entry);

    // entry.id is relative filepath -- see: https://docs.astro.build/en/reference/api-reference/#id
    // let { slug, date } = parseFilepath(entry.id);

    console.debug(
      `[SSG] Parsed ${entry.id} to slug: '${entry.slug}' and date: ${entry.date.toISOString()}`
    );

    paths.push({ params: { slug: entry.slug }, props: { entry } });
  }
  return paths;
}

// template
type Props = {
  entry: CollectionEntry<"projects">;
};

const { entry } = Astro.props;
const { Content } = await entry.render();
---

<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Document</title>
  </head>
  <body>
    <h1>{entry.data.title}</h1>
    <h2>{entry.date.toISOString()}</h2>
    <Content />
  </body>
</html>
