---
import { type CollectionEntry } from "astro:content";
import { getStaticPathsForCollection } from "@/utils/collectionUtils";
import Layout from "@/layouts/Layout.astro";
import type { ContentEntryMap } from "astro:content";
import assert from "assert";

export const collections: (keyof ContentEntryMap)[] = ["articles", "projects"];

export async function getStaticPaths() {
  let paths = [];
  for (const collectionName of collections) {
    const collectionPaths = await getStaticPathsForCollection(collectionName);
    for (const path of collectionPaths) {
      paths.push({
        ...path,
        params: {
          ...path.params,
          slug: `${collectionName}/${path.params.slug}`,
        },
        props: {
          ...path.props,
          collectionName,
        },
      });
    }
  }
  console.log(paths);
  return paths;
}

console.log(Astro.props);

const collectionName = Astro.props.collectionName as keyof ContentEntryMap;
assert(
  collections.includes(collectionName),
  `Invalid collection: ${collectionName}`
);

type Props = {
  collectionName: keyof ContentEntryMap;
  entry: ContentEntryMap[typeof collectionName];
};

const { entry } = Astro.props;
const { Content } = await entry.render();
---

<Layout>
  <h1>{entry.data.title}</h1>
  <h2>{entry.data.date.toISOString()}</h2>
  <Content />
</Layout>
