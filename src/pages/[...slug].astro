---
import { getCollection, type CollectionEntry } from "astro:content";
import Layout from "@/layouts/Layout.astro";
import type { ContentEntryMap } from "astro:content";

// SSG
export async function getStaticPaths() {
  // collections for which to generate paths
  // generate all /<collectionName>/<entrySlug> paths
  const collections: (keyof ContentEntryMap)[] = ["articles", "projects"];

  let paths = [];
  for (const collectionName of collections) {
    for (const entry of await getCollection(collectionName)) {
      console.debug(`[SSG][${collectionName}] Processing entry: ${entry.slug}`);
      paths.push({
        params: { slug: `${collectionName}/${entry.slug}` },
        props: { entry, collectionName },
      });
    }
  }
  return paths;
}

// templating
const collectionName = Astro.props.collectionName as keyof ContentEntryMap;

type Props = {
  collectionName: keyof ContentEntryMap;
  entry: CollectionEntry<typeof collectionName>;
};

const { entry } = Astro.props;
const { Content } = await entry.render();
---

<Layout>
  <h1 class="grow text-4xl border-0 mb-1 pb-0">
    {entry.data.title}
  </h1>
  <div class="border-0 text-base text font-normal text-dark-l">
    <span>
      {
        entry.data.date.toLocaleDateString("en-GB", {
          day: "2-digit",
          month: "short",
          year: "numeric",
        })
      }
    </span>
    <span class="mx-1">&mdash;</span>
    <a href={`/${collectionName}/`}>{collectionName}</a>
  </div>
  <Content />
</Layout>
